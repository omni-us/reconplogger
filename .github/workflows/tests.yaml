name: tests

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linux-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: Test with all optional dependencies
        run: |
          pip install .[test,all]
          pytest --cov --cov-report=term --cov-report=xml --junit-xml=junit.xml
          mv coverage.xml coverage_py${{ matrix.python }}_all.xml
          mv junit.xml junit_py${{ matrix.python }}_all.xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage_py${{ matrix.python }}
          path: ./coverage_py*
      - uses: actions/upload-artifact@v4
        with:
          name: junit_py${{ matrix.python }}
          path: ./junit_py*

  macos-windows-tox:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - run: pip install tox
      - run: tox -e py

  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Build package
        run: |
          pip install -U build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./dist/*

  installed-package:
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - uses: actions/download-artifact@v4
        with:
          name: package
          path: dist
      - name: Test with all optional dependencies
        run: |
          cd dist
          pip install $(ls *.whl)[test,all]
          python -m reconplogger_tests

  codecov:
    runs-on: ubuntu-latest
    environment: codecov
    needs: [linux-coverage]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./coverage_*.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          files: ./junit_*.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  pypi-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [linux-coverage, macos-windows-tox, installed-package]
    environment:
      name: pypi
      url: https://pypi.org/p/reconplogger
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
